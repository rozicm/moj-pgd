* {
  margin: 0;
  padding: 0;
}

.navbar {
  background-color: rgba(255, 255, 255, 0.7);
  width: 100%;
  justify-content: center;
  position: fixed;
  top: 0;
}

.logo-container {
  display: flex;
  align-items: center;
}

.logo {
  font-size: 40px;
  padding-left: 6px;
}

.navbar-container {
  display: flex;
  justify-content: space-between;
  align-items: center;
  height: 70px;
}

.nav-links {
  list-style: none;
  display: flex;
}

.nav-links li {
  margin: 25px;
  display: inline;
  font-size: 22px;
}

.okvir-container {
  width: 100%;
  align-items: center;
  overflow: hidden;
}

.okvir {
  float: left;
  box-sizing: border-box;
}

.custom-table-container {
  width: 90%;
  overflow-x: auto;
  box-shadow: 0 4px 24px rgba(0, 0, 0, 0.8);
  position: relative; /* Position relative for stacking context */
}

/* Define scrollbar colors using scrollbar-color property */
.custom-table-container {
  scrollbar-width: thin; /* For Firefox */
  scrollbar-color: #555 #333; /* Track and thumb color */
}

/* Track */
.custom-table-container::-webkit-scrollbar-track {
  background: #333; /* Darker track color */
}

/* Handle */
.custom-table-container::-webkit-scrollbar-thumb {
  background: #555; /* Darker thumb color */
  border-radius: 10px;
}

/* Handle on hover */
.custom-table-container::-webkit-scrollbar-thumb:hover {
  background: #777; /* Lighter thumb color on hover */
}

.custom-table {
  width: 100%;
  border-collapse: collapse;
  border-radius: 12px;
  overflow: hidden;
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.6);
  position: relative; /* Position relative for stacking context */
}

.custom-table th,
.custom-table td {
  padding: 12px;
  text-align: center;
  font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif; /* Modern font */
  color: #fff; /* White text color */
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3); /* Subtle box shadow for separation */
  font-weight: bold; /* Make the text bold */
}

.custom-table thead th {
  background: linear-gradient(45deg, #ff3d00, #ff1744); /* Gradient Red */
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
  position: sticky;
  top: 0;
  z-index: 2; /* Ensure it's above other elements */
}

.custom-table tbody tr:hover {
  background-color: #4a0c1e; /* Darker Red */
  transition: background-color 0.3s ease;
  transform: translateY(-5px); /* Elevate slightly on hover */
  box-shadow: 0 12px 20px rgba(0, 0, 0, 0.3); /* Enhance shadow on hover */
}

/* Animation for table rows */
.custom-table tbody tr {
  transition:
    transform 0.3s ease,
    box-shadow 0.3s ease; /* Smooth transition */
  animation: fadeIn 0.5s ease-out;
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(-20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* New styles for table header and alternating row colors */
.custom-table thead th {
  background-color: #4a0c1e; /* Dark Red */
  color: #fff;
  font-weight: bold;
  text-transform: uppercase;
}

.custom-table tbody tr:nth-child(even) {
  background-color: #31111e; /* Darker Red for even rows */
}

.custom-table tbody tr:hover {
  background-color: #5e1529; /* Even darker red on hover */
}

/* Rounded corners for first and last rows */
.custom-table tbody tr:first-child td:first-child,
.custom-table tbody tr:first-child td:last-child,
.custom-table tbody tr:last-child td:first-child,
.custom-table tbody tr:last-child td:last-child {
  border-radius: 8px;
}

/* Add gradient effect on hover */
.custom-table tbody tr:hover td {
  background: linear-gradient(45deg, #ff3d00, #ff1744);
}

/* Styling for the cell content */
.custom-table tbody td {
  font-size: 14px;
  line-height: 1.5;
  font-weight: bold; /* Make the text in td elements bold */
}

.input-form-container {
  width: 90%;
  margin-top: 20px;
  padding: 20px;
  background-color: rgba(
    red,
    green,
    blue,
    alpha
  ); /* Dark Red, matching table header */
  border-radius: 12px;
  box-shadow: 0px 4px 24px rgba(0, 0, 0, 0.8);
  animation: fadeIn 0.5s ease-out; /* Apply fadeIn animation */
}

.input-form-container form {
  display: flex;
  flex-wrap: wrap; /* Allow inputs to wrap if needed */
  justify-content: center; /* Center items horizontally */
}

.input-form-container input {
  width: calc(
    33.33% - 20px
  ); /* Occupies one-third of container width with spacing */
  padding: 12px 24px;
  margin: 10px;
  border-radius: 8px;
  border: 1px solid #ff1744; /* Gradient Red, matching table header */
  background-color: #31111e; /* Darker Red for even rows, matching table */
  color: #fff; /* White text color, matching table */
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3); /* Subtle box shadow for consistency */
  transition:
    background-color 0.3s ease,
    transform 0.2s ease,
    box-shadow 0.3s ease; /* Smooth transitions */
}

.input-form-container input:focus {
  outline: none; /* Remove default focus outline */
  background-color: #4a0c1e; /* Dark Red, matching table header */
}

.input-form-container input:hover {
  background-color: #5e1529; /* Even darker red on hover */
  background: linear-gradient(45deg, #ff3d00, #ff1744);
}

.input-form-container input {
  /* Existing input styles */
  transition:
    background-color 0.3s ease,
    box-shadow 0.3s ease,
    transform 0.2s ease; /* Include transform transition */
}

.input-form-container input:hover {
  background-color: #5e1529; /* Even darker red on hover */
  box-shadow: 0 0 10px rgba(255, 255, 255, 0.3); /* Add a glow effect on hover */
  transform: translateY(-5px); /* Pop out the hovered column slightly */
}

.input-form-container input:focus {
  outline: none; /* Remove default focus outline */
  background-color: #4a0c1e; /* Dark Red, matching table header */
  box-shadow: 0 0 10px rgba(255, 255, 255, 0.3); /* Add a glow effect on focus */
}

.input-form-container button {
  padding: 12px 34px;
  border-radius: 8px;
  background: linear-gradient(
    45deg,
    #ff3d00,
    #ff1744
  ); /* Gradient Red, matching table header */
  color: #fff;
  border: none;
  cursor: pointer;
  transition:
    background-color 0.3s ease,
    transform 0.2s ease,
    box-shadow 0.3s ease; /* Include transform transition */
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); /* Add subtle box shadow */
}

.input-form-container button:hover {
  background-color: #ff1744; /* Darker Red, matching table header gradient */
  transform: translateY(-2px) scale(1.05); /* Pop out and scale up slightly on hover */
  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.3); /* Add a stronger shadow on hover */
}

.input-form-container button:active {
  transform: translateY(1px) scale(0.98); /* Slight downward movement and scale down on click */
  box-shadow: none; /* Remove box shadow on click */
}

/* Animation for input form */
.input-form-container:hover {
  transform: translateY(-5px); /* Elevate slightly on hover */
  box-shadow: 0 12px 20px rgba(0, 0, 0, 0.3); /* Enhance shadow on hover */
  transition:
    transform 0.3s ease,
    box-shadow 0.3s ease; /* Smooth transition */
}

.dot {
  width: 15px;
  height: 15px;
  border-radius: 50%;
  display: inline-block;
}

.cool-image {
  transform: rotate(5deg) scale(1); /* Rotation and scale */
  transition:
    filter 0.5s ease,
    transform 0.5s ease; /* Smooth transition for effects */
  animation: flow 5s infinite alternate ease-in-out; /* Flow animation */
}

.cool-image:hover {
  transform: rotate(0deg) scale(1.1); /* Reset rotation and scale up slightly on hover */
}

@keyframes flow {
  0% {
    transform: translateY(-10px); /* Start slightly above */
  }
  50% {
    transform: translateY(10px); /* Move down */
  }
  100% {
    transform: translateY(-10px); /* Move back up */
  }
}

input[type="date"]:before {
  content: attr(placeholder) !important;
  color: #aaa;
  margin-right: 0.5em;
}
input[type="date"]:focus:before,
input[type="date"]:valid:before {
  content: "";
}
/* styles.css */

@keyframes float {
  0%,
  100% {
    transform: translateY(40px);
  }
  50% {
    transform: translateY(-10px);
  }
}

.animate-float {
  animation: float 4s ease-in-out infinite;
}

.btn {
  --border-color: linear-gradient(-45deg, #ffae00, #ff0000, #fff200);
  --border-width: 0.125em;
  --curve-size: 0.5em;
  --blur: 30px;
  --bg: #080312;
  --color: #afffff;
  color: var(--color);
  /* use position: relative; so that BG is only for .btn */
  position: relative;
  isolation: isolate;
  display: inline-grid;
  place-content: center;
  padding: 0.5em 1.5em;
  font-size: 20px;
  border: 0;
  text-transform: uppercase;
  box-shadow: 10px 10px 20px rgba(0, 0, 0, 0.6);
  clip-path: polygon(
    /* Top-left */ 0% var(--curve-size),
    var(--curve-size) 0,
    /* top-right */ 100% 0,
    100% calc(100% - var(--curve-size)),
    /* bottom-right 1 */ calc(100% - var(--curve-size)) 100%,
    /* bottom-right 2 */ 0 100%
  );
  transition: color 250ms;
}

.btn::after,
.btn::before {
  content: "";
  position: absolute;
  inset: 0;
}

.btn::before {
  background: var(--border-color);
  background-size: 300% 300%;
  animation: move-bg7234 5s ease infinite;
  z-index: -2;
}

@keyframes move-bg7234 {
  0% {
    background-position: 31% 0%;
  }

  50% {
    background-position: 70% 100%;
  }

  100% {
    background-position: 31% 0%;
  }
}

.btn::after {
  background: var(--bg);
  z-index: -1;
  clip-path: polygon(
    /* Top-left */ var(--border-width)
      calc(var(--curve-size) + var(--border-width) * 0.5),
    calc(var(--curve-size) + var(--border-width) * 0.5) var(--border-width),
    /* top-right */ calc(100% - var(--border-width)) var(--border-width),
    calc(100% - var(--border-width))
      calc(100% - calc(var(--curve-size) + var(--border-width) * 0.5)),
    /* bottom-right 1 */
      calc(100% - calc(var(--curve-size) + var(--border-width) * 0.5))
      calc(100% - var(--border-width)),
    /* bottom-right 2 */ var(--border-width) calc(100% - var(--border-width))
  );
  transition: clip-path 500ms;
}

.btn:where(:hover, :focus)::after {
  clip-path: polygon(
    /* Top-left */ calc(100% - var(--border-width))
      calc(100% - calc(var(--curve-size) + var(--border-width) * 0.5)),
    calc(100% - var(--border-width)) var(--border-width),
    /* top-right */ calc(100% - var(--border-width)) var(--border-width),
    calc(100% - var(--border-width))
      calc(100% - calc(var(--curve-size) + var(--border-width) * 0.5)),
    /* bottom-right 1 */
      calc(100% - calc(var(--curve-size) + var(--border-width) * 0.5))
      calc(100% - var(--border-width)),
    /* bottom-right 2 */
      calc(100% - calc(var(--curve-size) + var(--border-width) * 0.5))
      calc(100% - var(--border-width))
  );
  transition: 200ms;
}

.btn:where(:hover, :focus) {
  color: #fff;
}

.checkbox-wrapper-31:hover .check {
  stroke-dashoffset: 0;
}

.checkbox-wrapper-31 {
  position: relative;
  display: inline-block;
  width: 30px;
  height: 30px;
}
.checkbox-wrapper-31 .background {
  fill: #ccc;
  transition: ease all 0.6s;
  -webkit-transition: ease all 0.6s;
}
.checkbox-wrapper-31 .stroke {
  fill: none;
  stroke: #fff;
  stroke-miterlimit: 10;
  stroke-width: 2px;
  stroke-dashoffset: 100;
  stroke-dasharray: 100;
  transition: ease all 0.6s;
  -webkit-transition: ease all 0.6s;
}
.checkbox-wrapper-31 .check {
  fill: none;
  stroke: #fff;
  stroke-linecap: round;
  stroke-linejoin: round;
  stroke-width: 2px;
  stroke-dashoffset: 22;
  stroke-dasharray: 22;
  transition: ease all 0.6s;
  -webkit-transition: ease all 0.6s;
}
.checkbox-wrapper-31 input[type="checkbox"] {
  position: absolute;
  width: 100%;
  height: 100%;
  left: 0;
  top: 0;
  margin: 0;
  opacity: 0;
  -appearance: none;
}
.checkbox-wrapper-31 input[type="checkbox"]:hover {
  cursor: pointer;
}
.checkbox-wrapper-31 input[type="checkbox"]:checked + svg .background {
  fill: #6cbe45;
}
.checkbox-wrapper-31 input[type="checkbox"]:checked + svg .stroke {
  stroke-dashoffset: 0;
}
.checkbox-wrapper-31 input[type="checkbox"]:checked + svg .check {
  stroke-dashoffset: 0;
}
